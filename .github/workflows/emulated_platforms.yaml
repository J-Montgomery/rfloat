name: QEMU Tests

on:
  workflow_dispatch: {}
  pull_request:
    branches: [master]
  push:
    branches: [master]

permissions:
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cpp_compiler: [g++, clang++]
        arch: [arm, aarch64, ppc64el, s390x, mips64el, riscv64, sh4, sparc64]
        include:
          - arch: arm
            qemu: qemu-arm
            triple: arm-linux-gnueabihf
            expected_failures: ''
          - arch: aarch64
            qemu: qemu-aarch64
            triple: aarch64-linux-gnu
            expected_failures: ''
          - cpp_compiler: g++
            arch: ppc64el
            qemu: qemu-ppc64le
            triple: powerpc64le-linux-gnu
            expected_failures: ''
          - cpp_compiler: clang++
            arch: ppc64el
            qemu: qemu-ppc64le
            triple: powerpc64le-linux-gnu
            expected_failures: ''
          - arch: s390x
            qemu: qemu-s390x
            triple: s390x-linux-gnu
            expected_failures: ''
          - arch: mips64el
            qemu: qemu-mips64el
            triple: mips64el-linux-gnuabi64
            expected_failures: ''
          - arch: riscv64
            qemu: qemu-riscv64
            triple: riscv64-linux-gnu
          - arch: sh4
            qemu: qemu-sh4
            triple: sh4-linux-gnu
            expected_failures: ''
          - arch: sparc64
            qemu: qemu-sparc64
            triple: sparc64-linux-gnu
            expected_failures: ''

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        persist-credentials: false

    - name: Set output directory
      shell: bash
      run: |
        echo "build_dir=${{ github.workspace }}/${{ matrix.arch }}/build" >> "$GITHUB_ENV"

    - name: Set GCC
      shell: bash
      if: ${{ matrix.cpp_compiler == 'g++' }}
      run: |
        echo "compiler=${{ matrix.triple }}-g++" >> $GITHUB_ENV
        echo 'compiler_flags=""' >> $GITHUB_ENV

    - name: Set Clang
      shell: bash
      if: ${{ matrix.cpp_compiler == 'clang++' }}
      run: |
        echo "compiler=clang++" >> $GITHUB_ENV
        echo 'compiler_flags="-target ${{ matrix.triple }}"' >> $GITHUB_ENV

    - name: Install QEMU and build tools
      run: |
        sudo apt-get install -y qemu-user qemu-user-static cmake build-essential
        sudo apt-get install -y gcc-${{ matrix.triple }} g++-${{ matrix.triple }} binutils-${{ matrix.triple }} libgtest-dev

    - name: Configure CMake for ${{ matrix.arch }}
      env:
        BUILD_DIR: ${{ env.build_dir }}
        COMPILER: ${{ env.compiler }}
        ARCH: ${{ matrix.arch }}
        COMPILER_FLAGS: ${{ env.compiler_flags }}
        WORKSPACE: ${{ github.workspace }}
      run: cmake -B $BUILD_DIR \
              -DCMAKE_CXX_COMPILER="$COMPILER" \
              -DCMAKE_CROSSCOMPILING=TRUE \
              -DCMAKE_SYSTEM_NAME=Linux \
              -DCMAKE_SYSTEM_PROCESSOR=$ARCH \
              -DCMAKE_CXX_FLAGS=$COMPILER_FLAGS \
              -S $WORKSPACE \
              --preset qemu

    - name: Build
      env:
        BUILD_DIR: ${{ env.build_dir }}
      run: >
        cmake --build "$BUILD_DIR" --config Release --parallel 2

    - name: QEMU Reproducibility Tests
      env:
        QEMU: ${{ matrix.qemu }}
        TRIPLE: ${{ matrix.triple }}
        EXCLUDE: ${{ matrix.expected_failures }}
        BUILD_DIR: ${{ env.build_dir }}
      run: >
        echo "$BUILD_DIR" > /dev/null
        "$QEMU" -L "/usr/$TRIPLE" $BUILD_DIR/reproducibility_tests --test-case-exclude="$EXCLUDE"

    - name: QEMU Interface Tests
      env:
        QEMU: ${{ matrix.qemu }}
        TRIPLE: ${{ matrix.triple }}
        EXCLUDE: ${{ matrix.expected_failures }}
        BUILD_DIR: ${{ env.build_dir }}
      run: >
        echo "$BUILD_DIR" > /dev/null
        "$QEMU" -L "/usr/$TRIPLE" $BUILD_DIR/rfloat_tests --test-case-exclude="$EXCLUDE"

    - name: QEMU Basic Numeric Tests
      env:
        QEMU: ${{ matrix.qemu }}
        TRIPLE: ${{ matrix.triple }}
        EXCLUDE: ${{ matrix.expected_failures }}
        BUILD_DIR: ${{ env.build_dir }}
      run: >
        echo "$BUILD_DIR" > /dev/null
        "$QEMU" -L "/usr/$TRIPLE" $BUILD_DIR/rcmath_tests --test-case-exclude="$EXCLUDE"

    - name: QEMU Examples Tests
      env:
        QEMU: ${{ matrix.qemu }}
        TRIPLE: ${{ matrix.triple }}
        EXCLUDE: ${{ matrix.expected_failures }}
        BUILD_DIR: ${{ env.build_dir }}
      run: >
        echo "$BUILD_DIR" > /dev/null
        "$QEMU" -L "/usr/$TRIPLE" $BUILD_DIR/cpp_examples --test-case-exclude="$EXCLUDE"

    - name: QEMU Compiler Bug Tests
      env:
        QEMU: ${{ matrix.qemu }}
        TRIPLE: ${{ matrix.triple }}
        EXCLUDE: ${{ matrix.expected_failures }}
        BUILD_DIR: ${{ env.build_dir }}
      run: >
        echo "$BUILD_DIR" > /dev/null
        "$QEMU" -L "/usr/$TRIPLE" $BUILD_DIR/compiler_bug_tests --test-case-exclude="$EXCLUDE"